initSidebarItems({"fn":[["always_abort","使所有未来的 panic 直接中止，而不运行 panic 钩子或展开。"],["catch_unwind","调用一个闭包，如果发生，则捕获展开 panic 的原因。"],["panic_any","使用给定的消息作为 panic 有效载荷，使当前线程 panic。"],["resume_unwind","在不调用 panic 钩子的情况下触发 panic。"],["set_hook","注册一个自定义的 panic 钩子，替换以前注册的任何一个。"],["take_hook","注销当前的 panic 钩子，并返回它。"]],"struct":[["AssertUnwindSafe","一个简单的包装器，可以断言它是 unwind 安全的。"],["Location","包含有关 panic 位置信息的结构体。"],["PanicInfo","提供有关 panic 的信息的结构体。"]],"trait":[["RefUnwindSafe","一种标记 trait，表示共享引用被认为是 unwind 安全的类型。"],["UnwindSafe","表示 Rust 中 “panic safe” 类型的标记 trait。"]]});