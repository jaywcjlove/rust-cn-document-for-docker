name: CI

env:
  CARGO_TERM_COLOR: always
  MSRV: 1.56.0

on:
  push:
    # branches:
    # - main
    tags:
      - v*

jobs:
  check:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Update rustup
        run: rustup self update


      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install nightly -c rust-docs
          rustup default nightly

      - name: Install mdbook
        run: |
          mkdir bin
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.5/mdbook-v0.4.5-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=bin
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - run: mkdir dist
      - run: git clone https://github.com/rust-lang-cn/rust-by-example-cn.git -b gh-pages dist/rust-by-example-cn --depth 1
      - run: git clone https://github.com/rust-lang-cn/book-cn.git -b gh-pages dist/book --depth 1
      - run: git clone https://github.com/rust-lang-cn/std-cn.git -b main std --depth 1
      - run: git clone https://github.com/rust-lang-cn/reference-cn.git -b master reference-cn --depth 1
      - run: git clone https://github.com/rust-lang-cn/rustdoc-cn.git -b master rustdoc-cn --depth 1
      # - run: git clone https://github.com/rust-lang-cn/edition-guide-cn.git -b master edition-guide-cn --depth 1
      - run: git clone https://github.com/zzy/rust-cookbook-zh-cn.git -b master rust-cookbook-cn --depth 1

      - run: cp -rp std/doc dist/std
      - run: rm -rf dist/book/.git
      - run: rm -rf dist/rust-by-example-cn/.git
      - run: rm -rf rustdoc-cn/.git
      - run: rm -rf reference-cn/.git
      - run: rm -rf rust-cookbook-cn/.git

      - name: reference-cn
        working-directory: reference-cn
        run: |
          mdbook build

      - name: rustdoc-cn
        working-directory: rustdoc-cn
        run: |
          mdbook build

      - name: rust-cookbook-cn
        working-directory: rust-cookbook-cn
        run: |
          mdbook build

      - run: |
          cp -rp reference-cn/book dist/reference
          cp -rp rustdoc-cn/book dist/rustdoc
          cp -rp edition-guide-cn/book dist/rustdoc
          cp -rp rust-cookbook-cn/book dist/rust-cookbook


      - name: Deploy Website
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

      # Create Docker Image
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build rust-cn-document-for-docker image
        run: docker image build -t rust-cn-document-for-docker .

      - name: Tags & Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "outputs.tag - $VERSION"
          docker tag rust-cn-document-for-docker ${{ secrets.DOCKER_USER }}/rust-cn-document-for-docker:$VERSION
          docker tag rust-cn-document-for-docker ${{ secrets.DOCKER_USER }}/rust-cn-document-for-docker:latest
          docker push ${{ secrets.DOCKER_USER }}/rust-cn-document-for-docker:$VERSION
          docker push ${{ secrets.DOCKER_USER }}/rust-cn-document-for-docker:latest

      # Create Docker Image in Github
      - name: Login to GitHub registry
        run: echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build docker image
        run: docker build -t ghcr.io/jaywcjlove/rust-cn-document-for-docker:latest .

      - name: Publish to GitHub registry
        run: docker push ghcr.io/jaywcjlove/rust-cn-document-for-docker:latest

      - name: Tag docker image (beta) and publish to GitHub registry
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          echo "version: v$VERSION"
          docker tag ghcr.io/jaywcjlove/rust-cn-document-for-docker:latest ghcr.io/jaywcjlove/rust-cn-document-for-docker:$VERSION
          docker push ghcr.io/jaywcjlove/rust-cn-document-for-docker:$VERSION